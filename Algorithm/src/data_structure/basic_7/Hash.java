package data_structure.basic_7;

public class Hash {

	public static void main(String[] args) {
		/*
		  해시 테이블 (Hash tables/ Hash map)
		  (1) 해시 테이블은 대량의 정보를 저장하고, 특정 요소를 효율적으로 검색할 수 있는
		  	  복잡한 데이터 구조이다.
		  (2) 테이블 내에 더 작은 서브그룹인 버킷에 키/값 쌍을 저장한다.
		  (3) 해시 테이블은 키를 저장할 때 메모리 공간을 효율적으로 사용할 수 있도록
		  	  키를 해시 함수를 통해 해시라는 특정 숫자값으로 변환한다
		  	  따라서 해시 테이블은 필요할 때에만 메모리 크기를 늘리고, 가능한 작은
		  	  크기를 유지한다
		  (4) 시간복잡도
		  	ㄴ 값 가져오기 O(1)
		  	ㄴ 값 추가하기 O(1)
		  	ㄴ 값 삭제하기 O(1)
		  	
		  (5) 장점
		  	  ㄴ 새로운 요소들의 추가/삭제가 용이하고 효율적이다
		  	  ㄴ 원하는 값의 검색/가져오기가 빠르고 효율적이다
		  	  ㄴ 동적인 메모리 크기
		  (6) 단점
		  	  ㄴ 충돌이 일어날 수 있다
		  	  ㄴ 충돌이 자주 일어날 수 있으며 해시함수의 정비가 필요한 경우가 많다
		  (7) 사용하는 경우
		  	  ㄴ 데이터베이스 : 주소 찾기, 이름 찾기, 번호 찾기
		  	  ㄴ 사용자 로그인 인증
		 */
	}

}
